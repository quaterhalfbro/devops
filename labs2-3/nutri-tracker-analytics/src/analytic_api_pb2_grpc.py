# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import analytic_api_pb2 as analytic__api__pb2


class AnalyticServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCaloriesStatistic = channel.unary_unary(
                '/api.AnalyticService/GetCaloriesStatistic',
                request_serializer=analytic__api__pb2.GetCaloriesRequest.SerializeToString,
                response_deserializer=analytic__api__pb2.GetCaloriesResponse.FromString,
                )
        self.GetAllCaloriesStatistic = channel.unary_unary(
                '/api.AnalyticService/GetAllCaloriesStatistic',
                request_serializer=analytic__api__pb2.GetCaloriesRequest.SerializeToString,
                response_deserializer=analytic__api__pb2.GetAllCaloriesResponse.FromString,
                )
        self.GetRecommendations = channel.unary_unary(
                '/api.AnalyticService/GetRecommendations',
                request_serializer=analytic__api__pb2.GetRecsRequest.SerializeToString,
                response_deserializer=analytic__api__pb2.GetRecsResponse.FromString,
                )


class AnalyticServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCaloriesStatistic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCaloriesStatistic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecommendations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AnalyticServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCaloriesStatistic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCaloriesStatistic,
                    request_deserializer=analytic__api__pb2.GetCaloriesRequest.FromString,
                    response_serializer=analytic__api__pb2.GetCaloriesResponse.SerializeToString,
            ),
            'GetAllCaloriesStatistic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCaloriesStatistic,
                    request_deserializer=analytic__api__pb2.GetCaloriesRequest.FromString,
                    response_serializer=analytic__api__pb2.GetAllCaloriesResponse.SerializeToString,
            ),
            'GetRecommendations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecommendations,
                    request_deserializer=analytic__api__pb2.GetRecsRequest.FromString,
                    response_serializer=analytic__api__pb2.GetRecsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.AnalyticService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AnalyticService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCaloriesStatistic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.AnalyticService/GetCaloriesStatistic',
            analytic__api__pb2.GetCaloriesRequest.SerializeToString,
            analytic__api__pb2.GetCaloriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCaloriesStatistic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.AnalyticService/GetAllCaloriesStatistic',
            analytic__api__pb2.GetCaloriesRequest.SerializeToString,
            analytic__api__pb2.GetAllCaloriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRecommendations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.AnalyticService/GetRecommendations',
            analytic__api__pb2.GetRecsRequest.SerializeToString,
            analytic__api__pb2.GetRecsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
